<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ldz.mapper.EmployeeMapper">
	<resultMap id="BaseResultMap" type="com.ldz.model.Employee">
		<id column="employee_id" jdbcType="INTEGER" property="employeeId" />
		<result column="employee_name" jdbcType="VARCHAR" property="employeeName" />
		<result column="employee_email" jdbcType="VARCHAR" property="employeeEmail" />
		<result column="employee_departmentId" jdbcType="INTEGER" property="employeeDepartmentid" />
	</resultMap>
	
	<resultMap id="BaseResultMapAll" type="com.ldz.model.Employee">
		<id column="employee_id" jdbcType="INTEGER" property="employeeId" />
		<result column="employee_name" jdbcType="VARCHAR" property="employeeName" />
		<result column="employee_email" jdbcType="VARCHAR" property="employeeEmail" />
		<result column="employee_departmentId" jdbcType="INTEGER" property="employeeDepartmentid" />
		<association property="department" javaType="com.ldz.model.Department">
			<id column="department_id" jdbcType="INTEGER" property="departmentId" />
			<result column="department_name" jdbcType="VARCHAR" property="departmentName" />
		</association>
	</resultMap>
	
	<sql id="Base_Column_List">
		employee_id, employee_name, employee_email, employee_departmentId
	</sql>
	
	<sql id="Base_Column_List_All">
		e.employee_id, e.employee_name, e.employee_email, e.employee_departmentId, 
		d.department_id, d.department_name
	</sql>
	
	<select id="selectEmployeeByName" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from employee
		where employee_name = #{employeeName}
	</select>
	
	<select id="selectAll" resultMap="BaseResultMapAll">
		select
		<include refid="Base_Column_List_All" />
		from employee e, department d
		where e.employee_departmentId = d.department_id 
	</select>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from employee
		where employee_id = #{employeeId,jdbcType=INTEGER}
	</select>
	
	<select id="selectByPrimaryKeyAll" parameterType="java.lang.Integer"
		resultMap="BaseResultMapAll">
		select
		<include refid="Base_Column_List_All" />
		from employee e, department d
		where e.employee_id = #{employeeId,jdbcType=INTEGER} 
				and e.employee_departmentId = d.department_id
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from employee
		where employee_id = #{employeeId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.ldz.model.Employee">
		insert into employee (employee_id, employee_name, employee_email,
		employee_departmentId)
		values (#{employeeId,jdbcType=INTEGER}, #{employeeName,jdbcType=VARCHAR},
		#{employeeEmail,jdbcType=VARCHAR},
		#{employeeDepartmentid,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.ldz.model.Employee">
		insert into employee
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="employeeId != null">
				employee_id,
			</if>
			<if test="employeeName != null">
				employee_name,
			</if>
			<if test="employeeEmail != null">
				employee_email,
			</if>
			<if test="employeeDepartmentid != null">
				employee_departmentId,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="employeeId != null">
				#{employeeId,jdbcType=INTEGER},
			</if>
			<if test="employeeName != null">
				#{employeeName,jdbcType=VARCHAR},
			</if>
			<if test="employeeEmail != null">
				#{employeeEmail,jdbcType=VARCHAR},
			</if>
			<if test="employeeDepartmentid != null">
				#{employeeDepartmentid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.ldz.model.Employee">
		update employee
		<set>
			<if test="employeeName != null">
				employee_name = #{employeeName,jdbcType=VARCHAR},
			</if>
			<if test="employeeEmail != null">
				employee_email = #{employeeEmail,jdbcType=VARCHAR},
			</if>
			<if test="employeeDepartmentid != null">
				employee_departmentId = #{employeeDepartmentid,jdbcType=INTEGER},
			</if>
		</set>
		where employee_id = #{employeeId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.ldz.model.Employee">
		update employee
		set employee_name = #{employeeName,jdbcType=VARCHAR},
		employee_email = #{employeeEmail,jdbcType=VARCHAR},
		employee_departmentId = #{employeeDepartmentid,jdbcType=INTEGER}
		where employee_id = #{employeeId,jdbcType=INTEGER}
	</update>
</mapper>